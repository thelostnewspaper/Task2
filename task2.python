import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load the Titanic dataset
df = pd.read_csv('train.csv')

# 1. Generate summary statistics
summary_stats = df.describe()
print("Summary Statistics:")
print(summary_stats)

# 2. Create histograms for numeric features
plt.figure(figsize=(12, 6))
df['Age'].hist(bins=30, alpha=0.5, color='blue', edgecolor='black')
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.grid(False)
plt.show()

plt.figure(figsize=(12, 6))
df['Fare'].hist(bins=30, alpha=0.5, color='green', edgecolor='black')
plt.title('Fare Distribution')
plt.xlabel('Fare')
plt.ylabel('Frequency')
plt.grid(False)
plt.show()

# Boxplots for numeric features
plt.figure(figsize=(12, 6))
sns.boxplot(x='Survived', y='Age', data=df)
plt.title('Boxplot of Age by Survival')
plt.show()

plt.figure(figsize=(12, 6))
sns.boxplot(x='Survived', y='Fare', data=df)
plt.title('Boxplot of Fare by Survival')
plt.show()

# 3. Pairplot to visualize relationships
sns.pairplot(df, hue='Survived', vars=['Age', 'Fare', 'SibSp', 'Parch'])
plt.show()

# 4. Correlation matrix
correlation_matrix = df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, fmt=".2f", cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

# 5. Identify patterns and trends
# Example: Survival rate by gender
survival_rate_by_gender = df.groupby('Sex')['Survived'].mean()
print("\nSurvival Rate by Gender:")
print(survival_rate_by_gender)

# Example: Survival rate by class
survival_rate_by_class = df.groupby('Pclass')['Survived'].mean()
print("\nSurvival Rate by Class:")
print(survival_rate_by_class)
